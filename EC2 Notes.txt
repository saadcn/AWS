EC2-->

Buying Options:
1. On Demand - Allows to pay a fixed rate by hour.
2. Reserved - Allows you to reserve an instance for 1 or 3 years term.
3. Spot - Instance can be purchased by setting a bid.

Defaults:
1. EC2 instances belong to a certain region.
2. We can see the service status and the availability zones.
3. There is always a default security group created for the users.


AMI:
1. AMI = Amazon machine instance.
2. We can select "Free tier only" checkbox so we wont get non free tier AMI listed.
3. Virtualization types can be : HVM = Hardware virtual machine, PV...
4. More about virtualization types ......
5. We can see various params for AMI that are : Family(General purpose, Compute optimized, GPU , Memory Optimized....) , 
Type, vCPU(number of virtual cpu), Internal storage, EBS optimized, Network performance, IPV6 compatibility.
6. Multiple instances can be launched 
7. we can request a spot instance.
8. Each API is launched in a VPC and is a part of a subnet.
9. we can assign a role to an instance to give it access to other AWS.
10. we can add boot time scripts to instances.
11. We can add storage to our EC2. The root volume has the OS installed. By default the volume get deleted based on 
"Delete on Termination" flag.
12. Root volume is not encrypted by default. Others can be.
13. If you forget your private secret access key for your EC2 then you cannot get it back.
14. you can create new keys but the access key can be assigned to EC2 only at the time of creation.
15. Instances with termination protection ON cannot be terminated before you change it in settings.

AMI Login:
1. Login command for AMI us ssh ec2-user@<public-ip> -i <Key>.
2. The permissions on key should be 700/600 or no permissions to others.
3. We can SSH using a pem file on Mac/Linux. For windows putty you need to use putty keygen to change the PEM file to a PPK file.

Accessing S3 from EC2:
1. you will need a user who got access to S3. This can be done by creating a policy attached to user or his group.
2. you can login to your EC2 and do : []#aws s3 ls 
to see the s3 buckets
3. your user secret keys should be present in the ~/.aws/credentials file if you want to see your s3 buckets.
4. You can directly go to  ~/.aws/credentials and add your credentials or you can do : []#aws configure
5. []#aws configure will ask you your users secret keys and region.
6. To create an new bucket you can use : []#aws s3 mb s3://<bucketname>.
7. IMPT: Bucket namespace is shared by all users so you cannot reuse a bucket already created. 
8. Bucket names are always in lower cases.
9. IMPT: Its never recommended to save credentials in EC2.
10. Its always much safer to give roles to your instances than saving credentials locally on EC2

EC2 Instance Metadata:
1. []# curl 169.254.169.254/latest/meta-data/ gives metadata
2. you can use this in code where you need public  ip and other variables.

Elastic loadbalancers:
1. Elastic load balancers are not free
2. you are charged on per hour and per GB basis.
3. Before creating ELB you need to create listners.
4. Listners check connections to load balancers.
5. Its configured with a protoco and a port for front end and same for back end.
6. Connection to load balancers are Http, Https, SSL, TCP .
7. EC2 supports ports from 1-65535


AMI Types:
I - IOPS
M - General Purpose
T - Cheap General Purpose
R - High Ram
C - High compute
G - Graphics
D - Dense

EBS Types:
GP2 SSD - Up to 10k IOPS
Provisiones IOPS IO1 - 10k+
Magnetic - cheap, infrequently accessed


One EBS can be mounted to only one EC2 at a time, for multiple mounting you can use EFS.

Default region for all SDK is US-EAST-1






